name: "Sampo GitHub Action"
description: "Run Sampo release and/or publish in CI"
author: "bruits"

inputs:
  command:
    description: "Operation to run: release | publish | release-and-publish"
    required: false
    default: "release-and-publish"
  dry-run:
    description: "Simulate actions without modifying files or publishing"
    required: false
    default: "false"
  working-directory:
    description: "Path to repository root (defaults to GITHUB_WORKSPACE)"
    required: false
  cargo-token:
    description: "crates.io token (exported as CARGO_REGISTRY_TOKEN)"
    required: false
  args:
    description: "Extra flags forwarded to cargo publish via `sampo publish -- â€¦`"
    required: false

outputs:
  released:
    description: "Whether the release step ran successfully"
    value: ${{ steps.run.outputs.released }}
  published:
    description: "Whether the publish step ran successfully"
    value: ${{ steps.run.outputs.published }}

runs:
  using: "composite"
  steps:
    - id: run
      name: Run Sampo
      shell: bash
      env:
        INPUT_COMMAND: ${{ inputs.command }}
        INPUT_DRY_RUN: ${{ inputs["dry-run"] }}
        INPUT_WORKING_DIRECTORY: ${{ inputs["working-directory"] }}
        INPUT_CARGO_TOKEN: ${{ inputs["cargo-token"] }}
        INPUT_ARGS: ${{ inputs.args }}
      run: |
        set -euo pipefail

        # Ensure Rust available
        if ! command -v cargo >/dev/null 2>&1; then
          echo "Installing Rust toolchain..."
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source "$HOME/.cargo/env"
        fi

        # Determine workspace root
        WORKDIR="${INPUT_WORKING_DIRECTORY:-${GITHUB_WORKSPACE:-.}}"
        echo "Using workspace: ${WORKDIR}"

        # Build and run the action binary from the workspace
        cargo run --manifest-path "${WORKDIR}/Cargo.toml" -p sampo-github-action -- \
          --mode "${INPUT_COMMAND}" \
          ${INPUT_DRY_RUN:+--dry-run} \
          ${INPUT_WORKING_DIRECTORY:+--working-directory "${INPUT_WORKING_DIRECTORY}"} \
          ${INPUT_CARGO_TOKEN:+--cargo-token "${INPUT_CARGO_TOKEN}"} \
          ${INPUT_ARGS:+--args "${INPUT_ARGS}"}

        # Capture outputs exposed by the binary via GITHUB_OUTPUT
        # (Already written by the binary)

branding:
  icon: "upload-cloud"
  color: "blue"
